{
  "service": {
    "service": "serverless-test",
    "serviceObject": {
      "name": "serverless-test"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "deploymentMethod": "direct",
      "lambdaHashingVersion": "20201221",
      "environment": {
        "STAGE": "test-v1"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetPatientInfoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-test-test-v1-getPatientInfo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-test",
                        "test-v1",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-test-test-v1*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-test-test-v1*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-test",
                    "test-v1",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetPatientInfoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-test/test-v1/1709022999806-2024-02-27T08:36:39.806Z/getPatientInfo.zip"
              },
              "Handler": "functions/test.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "serverless-test-test-v1-getPatientInfo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "test-v1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetPatientInfoLogGroup"
            ]
          },
          "GetPatientInfoLambdaVersionK4iY2LJkaxf4tONYAE9qWJaorTNd7tEfe4Doa54": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPatientInfoLambdaFunction"
              },
              "CodeSha256": "HJ1mI0qnC7akVzQn3PRmHKMThgPFvdHX++9kJRGRc2o="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "test-v1-serverless-test",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceCare": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "care",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCarePatientDashinfo": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCare"
              },
              "PathPart": "patient-info",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCircle": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "circle",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCirclePatientDashinfo": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCircle"
              },
              "PathPart": "patient-info",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarePatientDashinfoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarePatientDashinfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCirclePatientDashinfoOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCirclePatientDashinfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCarePatientDashinfoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCarePatientDashinfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "ApiGatewayAuthorizer"
              },
              "AuthorizationScopes": [
                "aws.cognito.signin.user.admin"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPatientInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetPatientInfoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCirclePatientDashinfoGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCirclePatientDashinfo"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "ApiGatewayAuthorizerV2"
              },
              "AuthorizationScopes": [
                "aws.cognito.signin.user.admin"
              ],
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPatientInfoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetPatientInfoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1709022998957": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "test-v1"
            },
            "DependsOn": [
              "ApiGatewayMethodCarePatientDashinfoOptions",
              "ApiGatewayMethodCirclePatientDashinfoOptions",
              "ApiGatewayMethodCarePatientDashinfoGet",
              "ApiGatewayMethodCirclePatientDashinfoGet"
            ]
          },
          "GetPatientInfoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPatientInfoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": {
                "Fn::Join": [
                  "-",
                  [
                    "CognitoUserPool",
                    {
                      "Ref": "AWS::StackName"
                    }
                  ]
                ]
              },
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": true,
                  "RequireNumbers": true,
                  "RequireUppercase": true,
                  "RequireSymbols": false
                }
              },
              "UsernameAttributes": [
                "email"
              ],
              "MfaConfiguration": "OFF",
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "Name": "email",
                  "Required": false,
                  "Mutable": true
                },
                {
                  "AttributeDataType": "String",
                  "Name": "name",
                  "Required": false,
                  "Mutable": true
                }
              ]
            }
          },
          "WebClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ClientName": "app-client",
              "ExplicitAuthFlows": [
                "ALLOW_ADMIN_USER_PASSWORD_AUTH",
                "ALLOW_CUSTOM_AUTH",
                "ALLOW_USER_PASSWORD_AUTH",
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "LEGACY",
              "SupportedIdentityProviders": [
                "COGNITO"
              ]
            }
          },
          "CognitoDomain": {
            "Type": "AWS::Cognito::UserPoolDomain",
            "Properties": {
              "Domain": "serverless-v1-test-v1",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              }
            }
          },
          "ApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "Name": "TestV1ApiAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "Arn"
                  ]
                }
              ],
              "IdentitySource": "method.request.header.Authorization"
            }
          },
          "CognitoUserPoolV2": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": {
                "Fn::Join": [
                  "-",
                  [
                    "CognitoUserPoolV2",
                    {
                      "Ref": "AWS::StackName"
                    }
                  ]
                ]
              },
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": true,
                  "RequireNumbers": true,
                  "RequireUppercase": true,
                  "RequireSymbols": false
                }
              },
              "UsernameAttributes": [
                "email"
              ],
              "MfaConfiguration": "OFF",
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "Name": "email",
                  "Required": false,
                  "Mutable": true
                },
                {
                  "AttributeDataType": "String",
                  "Name": "name",
                  "Required": false,
                  "Mutable": true
                }
              ]
            }
          },
          "WebClientV2": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "UserPoolId": {
                "Ref": "CognitoUserPoolV2"
              },
              "ClientName": "app-client",
              "ExplicitAuthFlows": [
                "ALLOW_ADMIN_USER_PASSWORD_AUTH",
                "ALLOW_CUSTOM_AUTH",
                "ALLOW_USER_PASSWORD_AUTH",
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "LEGACY",
              "SupportedIdentityProviders": [
                "COGNITO"
              ]
            }
          },
          "CognitoDomainV2": {
            "Type": "AWS::Cognito::UserPoolDomain",
            "Properties": {
              "Domain": "serverless-v2-test-v1",
              "UserPoolId": {
                "Ref": "CognitoUserPoolV2"
              }
            }
          },
          "ApiGatewayAuthorizerV2": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "Name": "TestV2ApiAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "CognitoUserPoolV2",
                    "Arn"
                  ]
                }
              ],
              "IdentitySource": "method.request.header.Authorization"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-test-test-v1-ServerlessDeploymentBucketName"
            }
          },
          "GetPatientInfoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPatientInfoLambdaVersionK4iY2LJkaxf4tONYAE9qWJaorTNd7tEfe4Doa54"
            },
            "Export": {
              "Name": "sls-serverless-test-test-v1-GetPatientInfoLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/test-v1"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-test-test-v1-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stackName": "serverless-test-test-v1"
    },
    "pluginsData": {},
    "functions": {
      "getPatientInfo": {
        "handler": "functions/test.handler",
        "events": [
          {
            "http": {
              "path": "care/patient-info",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": {
                  "Ref": "ApiGatewayAuthorizer"
                },
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "aws.cognito.signin.user.admin"
                ]
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "circle/patient-info",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "managedExternally": false,
                "authorizerId": {
                  "Ref": "ApiGatewayAuthorizerV2"
                },
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": [],
                "scopes": [
                  "aws.cognito.signin.user.admin"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-test-test-v1-getPatientInfo",
        "package": {
          "artifact": "/media/appgambit-1/1ca9cc03-6eb1-4a5c-9cfd-746fb8f618c022/Appgambit/Nexus/serverless-demo/.serverless/getPatientInfo.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "GetPatientInfoLambdaVersionK4iY2LJkaxf4tONYAE9qWJaorTNd7tEfe4Doa54"
      }
    },
    "resources": {
      "Resources": {
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": {
              "Fn::Join": [
                "-",
                [
                  "CognitoUserPool",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            },
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": true,
                "RequireNumbers": true,
                "RequireUppercase": true,
                "RequireSymbols": false
              }
            },
            "UsernameAttributes": [
              "email"
            ],
            "MfaConfiguration": "OFF",
            "Schema": [
              {
                "AttributeDataType": "String",
                "Name": "email",
                "Required": false,
                "Mutable": true
              },
              {
                "AttributeDataType": "String",
                "Name": "name",
                "Required": false,
                "Mutable": true
              }
            ]
          }
        },
        "WebClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ClientName": "app-client",
            "ExplicitAuthFlows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "PreventUserExistenceErrors": "LEGACY",
            "SupportedIdentityProviders": [
              "COGNITO"
            ]
          }
        },
        "CognitoDomain": {
          "Type": "AWS::Cognito::UserPoolDomain",
          "Properties": {
            "Domain": "serverless-v1-test-v1",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            }
          }
        },
        "ApiGatewayAuthorizer": {
          "Type": "AWS::ApiGateway::Authorizer",
          "Properties": {
            "Name": "TestV1ApiAuthorizer",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Type": "COGNITO_USER_POOLS",
            "ProviderARNs": [
              {
                "Fn::GetAtt": [
                  "CognitoUserPool",
                  "Arn"
                ]
              }
            ],
            "IdentitySource": "method.request.header.Authorization"
          }
        },
        "CognitoUserPoolV2": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": {
              "Fn::Join": [
                "-",
                [
                  "CognitoUserPoolV2",
                  {
                    "Ref": "AWS::StackName"
                  }
                ]
              ]
            },
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": true,
                "RequireNumbers": true,
                "RequireUppercase": true,
                "RequireSymbols": false
              }
            },
            "UsernameAttributes": [
              "email"
            ],
            "MfaConfiguration": "OFF",
            "Schema": [
              {
                "AttributeDataType": "String",
                "Name": "email",
                "Required": false,
                "Mutable": true
              },
              {
                "AttributeDataType": "String",
                "Name": "name",
                "Required": false,
                "Mutable": true
              }
            ]
          }
        },
        "WebClientV2": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "UserPoolId": {
              "Ref": "CognitoUserPoolV2"
            },
            "ClientName": "app-client",
            "ExplicitAuthFlows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "PreventUserExistenceErrors": "LEGACY",
            "SupportedIdentityProviders": [
              "COGNITO"
            ]
          }
        },
        "CognitoDomainV2": {
          "Type": "AWS::Cognito::UserPoolDomain",
          "Properties": {
            "Domain": "serverless-v2-test-v1",
            "UserPoolId": {
              "Ref": "CognitoUserPoolV2"
            }
          }
        },
        "ApiGatewayAuthorizerV2": {
          "Type": "AWS::ApiGateway::Authorizer",
          "Properties": {
            "Name": "TestV2ApiAuthorizer",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Type": "COGNITO_USER_POOLS",
            "ProviderARNs": [
              {
                "Fn::GetAtt": [
                  "CognitoUserPoolV2",
                  "Arn"
                ]
              }
            ],
            "IdentitySource": "method.request.header.Authorization"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!node_modules/**",
          "*.json",
          "*.yml"
        ],
        "artifactDirectoryName": "serverless/serverless-test/test-v1/1709022999806-2024-02-27T08:36:39.806Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-test/test-v1/1709022999806-2024-02-27T08:36:39.806Z",
    "artifact": ""
  }
}